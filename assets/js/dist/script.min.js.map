{"version":3,"sources":["script.js"],"names":["elem","elementToggleFunc","classList","toggle","sidebarBtn","document","querySelector","addEventListener","sidebar","filterBtn","querySelectorAll","selectItems","select","length","filterFunc","selectedValue","i","this","innerText","toLowerCase","replace","selectValue","filterItems","lastClickedBtn","dataset","category","add","remove","form","formInputs","checkValidity","formBtn","removeAttribute","pages","navigationLinks","j","innerHTML","page","window","scrollTo"],"mappings":"AAAA,aAIEA,IAAIC,kBAAkB,SAAtBD,GAAAA,EAGFE,UAAAC,OAAA,WAEMC,QAAUC,SAAWC,cAAR,kBAAbF,WAAaC,SAASC,cAAc,sBAKzCF,WAEDG,iBAAA,QAAA,WAHEN,kBAAkBO,WAOpB,IAAMC,OAASJ,SAAWC,cAACI,iBAErBC,YAACJ,SAAiBG,iBAAqB,sBAC3CT,YAAkBI,SAAlBC,cAAA,uBAGFG,UAAAJ,SAAAK,iBAAA,qBACAE,OAAKL,iBAAeI,QAAYE,WAC9BF,kBAAeJ,QAIbO,IAAAA,IAAAA,EAAAA,EAAWC,EAAAA,YAAXF,OAAAG,IACDL,YALDK,GAAAT,iBAAA,QAAA,WAQF,IAAAQ,EAAAE,KAAAC,UAAAC,cAAAC,QAAA,KAAA,KANIC,YAAYH,UAAYD,KAAKC,UAC7BjB,kBAAkBW,QAMhBU,WAAWP,KAqBbQ,IAhBED,IAAAA,YAAWjB,SAAIH,iBAAf,sBAEAoB,WAAYN,SAAGd,GAChB,IAAA,IAAAc,EAAA,EAAAA,EAAAM,YAAAT,OAAAG,IACF,QAAAD,GAAAA,IAAAO,YAAAN,GAAAQ,QAAAC,SAGHH,YAAAN,GAAAd,UAAAwB,IAAA,UALMJ,YAAYN,GAAGd,UAAUyB,OAAO,WAWlCN,eAAYH,UAAY,GAGxBK,IAAAA,EAAAA,IAAerB,UAAUyB,OAAOX,MAChCP,UAAKP,KAAAA,iBAAL,QAAA,WACAqB,IAAAA,EAAiBN,KAAjBC,UAAAC,cAAAC,QAAA,KAAA,KAPFC,YAAAH,UAAAD,KAAAC,UAWFJ,WAAAC,GANIQ,eAAerB,UAAUyB,OAAO,UAO9BC,KAAI1B,UAAWwB,IAACpB,UAChBuB,eAAaxB,OAWd,IALD,IAAAuB,KAAAvB,SAAAC,cAAA,eACAuB,WAASC,SAATpB,iBAA0B,qBACxBqB,QAAQC,SAAAA,cAAgB,mBAGzBhB,IAAA,EAAAA,IAAAa,WAAAhB,OAAAG,MACFa,WAPDb,KAAAT,iBAAA,QAAA,WAEMqB,KAAKE,gBACPC,QAAQC,gBAAgB,YASxBC,QAAQ5B,aAASK,WAAiB,MAWhCuB,IAJAA,IAAAA,gBAAS/B,SAAcQ,iBAAvB,mBACAwB,MAAAA,SAAexB,iBAAf,eAGAuB,IAAK,EAALjB,IAASd,gBAAiBW,OAA1BG,MACAkB,gBAAAA,KAAAA,iBAA6BP,QAAO,WACrC,IAAA,IAAAQ,EAAA,EAAAA,EAAAF,MAAApB,OAAAsB,IACFlB,KAAAmB,UAAAjB,gBAAAc,MAAAE,GAAAX,QAAAa,MAVHJ,MAAAE,GAAAjC,UAAAwB,IAAA,UAYDQ,gBAAAC,GAAAjC,UAAAwB,IAAA,UAPOY,OAAOC,SAAS,EAAG,KAEnBN,MAAME,GAAGjC,UAAUyB,OAAO,UAC1BO,gBAAgBC,GAAGjC,UAAUyB,OAAO","file":"script.min.js","sourcesContent":["'use strict';\r\n\r\n// element toggle function\r\nconst elementToggleFunc = function (elem) {\r\n  elem.classList.toggle(\"active\");\r\n}\r\n\r\n// sidebar variables\r\nconst sidebar = document.querySelector(\"[data-sidebar]\");\r\nconst sidebarBtn = document.querySelector(\"[data-sidebar-btn]\");\r\n\r\n// sidebar toggle functionality for mobile\r\nsidebarBtn.addEventListener(\"click\", function () {\r\n  elementToggleFunc(sidebar);\r\n});\r\n\r\n// custom select variables\r\nconst select = document.querySelector(\"[data-select]\");\r\nconst selectItems = document.querySelectorAll(\"[data-select-item]\");\r\nconst selectValue = document.querySelector(\"[data-select-value]\");\r\nconst filterBtn = document.querySelectorAll(\"[data-filter-btn]\");\r\n\r\nselect.addEventListener(\"click\", function () {\r\n  elementToggleFunc(this);\r\n});\r\n\r\n// add event in all select items\r\nfor (let i = 0; i < selectItems.length; i++) {\r\n  selectItems[i].addEventListener(\"click\", function () {\r\n    let selectedValue = this.innerText.toLowerCase().replace(/ /g, \"-\");\r\n    selectValue.innerText = this.innerText;\r\n    elementToggleFunc(select);\r\n    filterFunc(selectedValue);\r\n  });\r\n}\r\n\r\n// filter variables\r\nconst filterItems = document.querySelectorAll(\"[data-filter-item]\");\r\n\r\nconst filterFunc = function (selectedValue) {\r\n  for (let i = 0; i < filterItems.length; i++) {\r\n    if (selectedValue === \"all\" || selectedValue === filterItems[i].dataset.category) {\r\n      filterItems[i].classList.add(\"active\");\r\n    } else {\r\n      filterItems[i].classList.remove(\"active\");\r\n    }\r\n  }\r\n}\r\n\r\n// add event in all filter button items for large screen\r\nlet lastClickedBtn = filterBtn[0];\r\n\r\nfor (let i = 0; i < filterBtn.length; i++) {\r\n  filterBtn[i].addEventListener(\"click\", function () {\r\n    let selectedValue = this.innerText.toLowerCase().replace(/ /g, \"-\");\r\n    selectValue.innerText = this.innerText;\r\n    filterFunc(selectedValue);\r\n\r\n    lastClickedBtn.classList.remove(\"active\");\r\n    this.classList.add(\"active\");\r\n    lastClickedBtn = this;\r\n  });\r\n}\r\n\r\n// contact form variables\r\nconst form = document.querySelector(\"[data-form]\");\r\nconst formInputs = document.querySelectorAll(\"[data-form-input]\");\r\nconst formBtn = document.querySelector(\"[data-form-btn]\");\r\n\r\n// add event to all form input fields\r\nfor (let i = 0; i < formInputs.length; i++) {\r\n  formInputs[i].addEventListener(\"input\", function () {\r\n    // check form validation\r\n    if (form.checkValidity()) {\r\n      formBtn.removeAttribute(\"disabled\");\r\n    } else {\r\n      formBtn.setAttribute(\"disabled\", \"\");\r\n    }\r\n  });\r\n}\r\n\r\n// page navigation variables\r\nconst navigationLinks = document.querySelectorAll(\"[data-nav-link]\");\r\nconst pages = document.querySelectorAll(\"[data-page]\");\r\n\r\n// add event to all nav link\r\nfor (let i = 0; i < navigationLinks.length; i++) {\r\n  navigationLinks[i].addEventListener(\"click\", function () {\r\n    for (let j = 0; j < pages.length; j++) {\r\n      if (this.innerHTML.toLowerCase() === pages[j].dataset.page) {\r\n        pages[j].classList.add(\"active\");\r\n        navigationLinks[j].classList.add(\"active\");\r\n        window.scrollTo(0, 0);\r\n      } else {\r\n        pages[j].classList.remove(\"active\");\r\n        navigationLinks[j].classList.remove(\"active\");\r\n      }\r\n    }\r\n  });\r\n}\r\n"]}